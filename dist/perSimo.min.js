var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};!function(t,e){"function"==typeof define&&define.amd?define([],e):"object"===("undefined"==typeof exports?"undefined":_typeof(exports))?module.exports=e():t.PerSimo=e()}(this,function(){function t(t,e){return[(e.pageX-t.canvas.offsetLeft)/(t.canvasScreenWidth/t.canvasWidth),(e.pageY-t.canvas.offsetTop)/(t.canvasScreenHeight/t.canvasHeight)]}function e(t,e){return x=(e.touches[0].pageX-t.canvas.offsetLeft)/(t.canvasScreenWidth/t.canvasWidth),y=(e.touches[0].pageY-t.canvas.offsetTop)/(t.canvasScreenHeight/t.canvasHeight),[x,y]}function n(n){var i=this;if(this.canvas=n.canvas,void 0===this.canvas.getAttribute("width")||void 0===this.canvas.getAttribute("height"))throw new Error("Attributes width and height are mandatory on canvas element!");this.canvasWidth=n.width||parseInt(this.canvas.getAttribute("width"),10),this.canvasHeight=n.height||parseInt(this.canvas.getAttribute("height"),10),this.canvasScreenWidth=this.canvas.clientWidth,this.canvasScreenHeight=this.canvas.clientHeight,this.ctx=this.canvas.getContext("2d"),this.mousedown=!1,this.setColor(n.color="#000"),this.setSize(n.size=10),window.addEventListener("resize",function(){i.canvasScreenWidth=i.canvas.clientWidth,i.canvasScreenHeight=i.canvas.clientHeight}),this.canvas.addEventListener("mousedown",function(e){i.mousedown=!0;var n=t(i,e);i.ctx.beginPath(),i.ctx.moveTo(n[0],n[1])}),window.addEventListener("mouseup",function(){i.mousedown=!1}),this.canvas.addEventListener("mousemove",function(e){if(i.mousedown){var n=t(i,e);i.ctx.lineTo(n[0],n[1]),i.ctx.stroke()}}),this.canvas.addEventListener("touchstart",function(t){t.preventDefault(),i.mousedown=!0;var n=e(i,t);i.ctx.beginPath(),i.ctx.moveTo(n[0],n[1])}),window.addEventListener("touchend",function(){i.mousedown=!1}),this.canvas.addEventListener("touchmove",function(t){if(i.mousedown){var n=e(i,t);i.ctx.lineTo(n[0],n[1]),i.ctx.stroke()}})}return n.prototype.setColor=function(t){this.ctx.strokeStyle=t},n.prototype.setSize=function(t){this.ctx.lineWidth=parseInt(t,10)},n});